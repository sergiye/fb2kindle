@using jail.Models
@model BookFavoritesViewModel
@{
    ViewBag.Title = "Favorites";
}
    <script type="text/javascript">
    $(document).ready(function() {
        $("#searchBlock").keydown(function(event) {
            if (event.keyCode == 13) {
                window.Helper.delay(function () { SearchFavorites(); }, 1000);
            }
        });
    });

    function SearchFavorites() {
        var search = $("#searchBlock");
        var key = $.trim(search.val());
        //window.Helper.ShowError('Not implemented yet!');
    };

    function ClearSelected() {
        window.Helper.ShowError('Not implemented yet!');
    };

    function UpdateUserFavorites(id) {
        $.ajax({
            url: '@Url.Action("UpdateFavorites")',
            data: { id: id },
            success: function (data) {
                window.Helper.ShowSuccess('' + data);
                SearchFavorites();
            },
            error: function (response, status, error) {
                window.Helper.ShowError(error);
            }
        });
    };
    </script>

<div class="search-wrapper">
    <div class="btn-toolbar input-group">
        <input id="searchBlock" type="text" class="form-control" aria-label="..." placeholder="Start type to search...">
        <div class="input-group-btn">
            <button type="button" class="btn btn-primary" onclick="SearchFavorites();" title="Search">
                <i class="glyphicon glyphicon-search"></i>
            </button>
        </div>
        <div class="input-group-addon">
            <span>
                @(1 + Model.Skipped) - @(Model.Skipped + Model.Data.Count()) of @Model.TotalCount
            </span>
        </div>
        <div class="input-group-btn">
            <a class="btn btn-success @(Model.Page > 0 ? "" : "disabled")" role="button"
               href='@Url.Action("Favorites", new { id = ViewBag.Id, pageNum = 0 })' title="First page">
                First
            </a>
        </div>
        <div class="input-group-btn">
            <a class="btn btn-default @(Model.Page > 0 ? "" : "disabled")" role="button"
               href='@Url.Action("Favorites", new { id = ViewBag.Id, pageNum = @Model.Page - 1 })' title="Prev page">
                Prev
            </a>
        </div>
        <div class="input-group-addon">
            <span>
                @(Model.NumberOfPages < Model.Page ? 1 : Model.Page+1) / @Model.NumberOfPages
            </span>
        </div>
        <div class="input-group-btn">
            <a class="btn btn-default @(Model.Page < Model.NumberOfPages-1 ? "" : "disabled")" role="button"
               href='@Url.Action("Favorites", new { id = ViewBag.Id, pageNum = @Model.Page + 1 })' title="Next page">
                Next
            </a>
        </div>
        <div class="input-group-btn">
            <a class="btn btn-warning @(Model.Page < Model.NumberOfPages-1 ? "" : "disabled")" role="button"
               href='@Url.Action("Favorites", new { id = ViewBag.Id, pageNum = @Model.NumberOfPages-1 })' title="Last page">
                Last
            </a>
        </div>
        @{
            var user = Request.IsAuthenticated ? HttpContext.Current.Session["User"] as UserProfile : null;
            if (user != null && user.FlibustaId > 0)
            {
                <div class="input-group-btn">
                    <button type="button" class="btn btn-info" onclick="UpdateUserFavorites(@user.FlibustaId);" title="Fetch favorites">
                        <i class="glyphicon glyphicon-cloud-download"></i>
                    </button>
                </div>
            }
        }
        @* <div class="input-group-btn"> *@
        @*     <button type="button" class="btn btn-danger" onclick="ClearSelected();" title="Remove selected"> *@
        @*         <i class="glyphicon glyphicon-minus"></i> *@
        @*     </button> *@
        @* </div> *@
    </div>
</div>
<div class="clearfix"></div>
<div id="gridDataContainer">
    <table class="table table-bordered table-hover">
        <tr>
            <th style="min-width: 220px;">Title</th>
            <th style="min-width: 150px; width: 25%;">Author</th>
            <th style="min-width: 150px; width: 25%;">Sequence</th>
            <th style="min-width: 140px; width: 120px;">Date</th>
            @*<th style="min-width: 80px; width: 80px;">User Id</th>*@
        </tr>

        @if (Model != null && Model.Data.Any())
        {
            foreach (var item in Model.Data)
            {
                <tr>
                    <td>
                        <a href='@Url.Action("details", new {id = item.Id})' title="Book details">
                            <b>@Html.DisplayFor(modelItem => item.Title)</b>
                        </a>
                    </td>
                    <td>@{ Html.RenderPartial("AuthorsList", item.Authors); }</td>
                    <td>
                        @if (item.Sequences.Count > 0)
                        {
                            Html.RenderPartial("SequencesList", item.Sequences);
                        }
                        else
                        {
                            <br />}
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.DateAdded)</td>
                    @*<td>
                            @{ var flibustaLink = "http://flibusta.is/user/" + item.UserId; }
                            <a href=@flibustaLink> @Html.DisplayFor(modelItem => item.UserId)</a>
                        </td>*@
                </tr>
            }
        }
    </table>
</div>
