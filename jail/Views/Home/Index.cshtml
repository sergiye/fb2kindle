@model IEnumerable<jail.Models.BookInfo>

@{ ViewBag.Title = "Search books"; }
<script type="text/javascript">
    $(document).ready(function () {
        $("#searchBlock").keyup(function (event) {
            if (event.keyCode === 13) {
                RefreshData(true);
            }
        });
        $(".dropdown-menu.change-lang").on('click', 'li a', function () {
            var selectedItemText = $(this).text();
            var selectedItemSearchType = $(this).attr("data-search-lang");

            $(this).parents("li").addClass("selected");
            $(this).parents("ul").find("li").removeClass("selected");
            $("#searchBlock").attr("data-search-lang", selectedItemSearchType);
            var btnIdToChange = $(this).parents(".dropdown-menu.change-lang").attr("data-change-item-id");
            $("#" + btnIdToChange).html(selectedItemText + " <span class='caret'></span>");
        });

        $("#searchBlock").val('@ViewBag.Key');
    });
    function RefreshData(reloadOnError) {
        var search = $("#searchBlock");
        var key = $.trim(search.val());
        var lang = search.attr("data-search-lang");
        var link = '@Url.Action("Index", new { k = "keyValue", l = "langValue" })';
        link = link.replace("langValue", lang);
        link = link.replace("keyValue", key);
        window.history.pushState({ state: link }, 'Search results', link);
//        window.location.href = link;
        $.ajax({
            type: "GET",
            url: '@Url.Action("SearchResults")',
            data: { k: key, l: lang },
            success: function (response) {
                $("#gridContainer").html(response);
                $("#footer").hide();
            },
            error: function (response, status, error) {
                if (reloadOnError)
                    location.reload();
                else
                    window.Helper.ShowError(error);
            }
        });
    }
    function ToggleFavorite(bookId, title) {
        var item = $('#Fav' + bookId);
        var liked = item.hasClass("glyphicon-heart");
        if (liked){
            if (!confirm("Are you sure you want to remove recomendation for '" + title + "'?"))
                return;
        }
        else{
            if (!confirm("Are you sure you want to add recomendation for '" + title + "'?"))
                return;
        }
        $.ajax({
            url: '@Url.Action("FavoriteToggle")',
            type: "GET",
            data: { bookId: bookId },
            success: function () {
                if (liked){
                    item.removeClass('glyphicon-heart').addClass('glyphicon-heart-empty');
                    //item.parent().data("favId", bookId);
                }
                else{
                    item.removeClass('glyphicon-heart-empty').addClass('glyphicon-heart');
                    //item.parent().data("favId", null);
                }
            },
            error: function (response, status, error) {
                window.Helper.ShowError(error);
            }
        });
    }
</script>
<div class="search-wrapper">
    <div class="input-group pull-left">
        <input id="searchBlock" type="text" class="form-control" aria-label="..."
               data-search-lang="all" placeholder="Search by title or author...">
        <div class="input-group-btn">
            <button id="searchLangBtn" type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown"
                    aria-haspopup="true" aria-expanded="false">
                All<span class="caret"></span>
            </button>
            <ul class="dropdown-menu dropdown-menu-right change-lang" data-change-item-id="searchLangBtn">
                <li><a href="#" data-search-lang="all">All</a></li>
                <li><a href="#" data-search-lang="ru">Ru</a></li>
                <li><a href="#" data-search-lang="en">En</a></li>
            </ul>
        </div>
        <div class="input-group-btn">
            <button id="searchTypeBtn" type="button" class="btn btn-primary" onclick="RefreshData();" title="Search">
                <i class="glyphicon glyphicon-search"></i>
            </button>
        </div>
    </div>
</div>
<br />
<div class="clearfix"></div>

<div id="gridContainer">
    @{Html.RenderPartial("SearchResults", Model);}
</div>

<div class="clearfix"></div>
@if (Model == null || !Model.Any())
{
    Html.RenderPartial("Controls/Footer");
}
